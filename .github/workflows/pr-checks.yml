name: PR Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Check if linting would fix issues
      run: |
        if ! npm run lint:fix --silent; then
          echo "❌ Linting issues found. Please run 'npm run lint:fix' locally and commit the changes."
          exit 1
        fi

  test-coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm test -- --coverage

    - name: Check coverage threshold
      run: |
        COVERAGE=$(npm test -- --coverage --silent | grep -o 'All files.*[0-9]\+' | grep -o '[0-9]\+$' || echo "0")
        if [ "$COVERAGE" -lt 80 ]; then
          echo "❌ Test coverage is below 80% ($COVERAGE%)"
          exit 1
        else
          echo "✅ Test coverage is adequate ($COVERAGE%)"
        fi

  build-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Verify build outputs
      run: |
        if [ ! -f "dist/index.js" ] || [ ! -f "dist/index.esm.js" ] || [ ! -f "dist/index.d.ts" ]; then
          echo "❌ Build outputs are missing"
          exit 1
        else
          echo "✅ All build outputs are present"
        fi

  size-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Check bundle size
      run: |
        SIZE=$(stat -c%s "dist/index.js")
        SIZE_KB=$((SIZE / 1024))
        echo "Bundle size: ${SIZE_KB}KB"
        
        if [ $SIZE_KB -gt 50 ]; then
          echo "❌ Bundle size is too large (${SIZE_KB}KB > 50KB)"
          exit 1
        else
          echo "✅ Bundle size is acceptable (${SIZE_KB}KB)"
        fi

  dependency-audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate 