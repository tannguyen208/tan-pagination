name: Dependency Update

on:
  schedule:
    - cron: '0 2 * * 1' # Every Monday at 2 AM
  workflow_dispatch: # Allow manual trigger

jobs:
  update-dependencies:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install npm-check-updates
      run: npm install -g npm-check-updates

    - name: Update dependencies
      run: |
        # Update minor and patch versions
        ncu -u --target minor
        npm install

    - name: Run tests
      run: |
        npm test
        npm run build

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'üîÑ Update dependencies'
        body: |
          ## Automated Dependency Update
          
          This PR updates dependencies to their latest minor/patch versions.
          
          ### Changes
          - Updated dependencies to latest compatible versions
          - All tests are passing
          - Build is successful
          
          ### Review Checklist
          - [ ] Check for breaking changes in updated packages
          - [ ] Verify all tests pass
          - [ ] Confirm build works correctly
          
          _This PR was created automatically by GitHub Actions._
        branch: dependency-updates
        delete-branch: true

  security-audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

    - name: Run audit fix
      run: npm audit fix

    - name: Check for vulnerabilities
      run: |
        AUDIT_RESULT=$(npm audit --audit-level=high --json 2>/dev/null || echo '{"metadata":{"vulnerabilities":{"high":1}}}')
        HIGH_VULNS=$(echo $AUDIT_RESULT | jq '.metadata.vulnerabilities.high // 0')
        CRITICAL_VULNS=$(echo $AUDIT_RESULT | jq '.metadata.vulnerabilities.critical // 0')
        
        if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
          echo "‚ùå High or critical vulnerabilities found!"
          echo "High: $HIGH_VULNS, Critical: $CRITICAL_VULNS"
          exit 1
        else
          echo "‚úÖ No high or critical vulnerabilities found"
        fi 